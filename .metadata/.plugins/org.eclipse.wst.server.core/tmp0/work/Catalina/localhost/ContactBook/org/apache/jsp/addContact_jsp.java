/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2023-02-02 12:43:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addContact_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@import url('https://fonts.googleapis.com/css?family=PT+Sans');\r\n");
      out.write("\r\n");
      out.write("body{\r\n");
      out.write("  background: #fff;\r\n");
      out.write("  background-image:url(https://img.freepik.com/free-vector/neon-lights-geometric-shapes-background_52683-33385.jpg?w=2000);\r\n");
      out.write("  background-repeat:no-repeat;\r\n");
      out.write("  background-attachment:fixed;\r\n");
      out.write("  background-size:cover;\r\n");
      out.write("  font-family: 'PT Sans', sans-serif;\r\n");
      out.write("}\r\n");
      out.write(".card {\r\n");
      out.write("    border: 0.40rem solid #a5d2ff;\r\n");
      out.write("    top: 10%;\r\n");
      out.write("    background: #000000c7;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2{\r\n");
      out.write("  padding-top: 1.5rem;\r\n");
      out.write("}\r\n");
      out.write("a:hover{\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  color:white;\r\n");
      out.write("   \r\n");
      out.write("    background-color: #df8c96;\r\n");
      out.write("    border-color: #df8c96;\r\n");
      out.write("  transition: .3s;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("a{\r\n");
      out.write("  color:white; \r\n");
      out.write("  padding: 0.6rem 1.2rem;\r\n");
      out.write("  background: #da5767;\r\n");
      out.write("  border: 2px solid #da5767;\r\n");
      out.write("  transition:.3s;\r\n");
      out.write("  border-radius:7px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write(".form-control{\r\n");
      out.write("  background-color: #f8f9fa;\r\n");
      out.write("  padding: 20px;\r\n");
      out.write("  padding: 25px 15px;\r\n");
      out.write("  margin-bottom: 1.3rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-control:focus {\r\n");
      out.write("\r\n");
      out.write("    color: #000000;\r\n");
      out.write("    background-color: #ffffff;\r\n");
      out.write("    border: 3px solid #da5767;\r\n");
      out.write("    outline: 0;\r\n");
      out.write("    box-shadow: none;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-control:hover {\r\n");
      out.write("\r\n");
      out.write("    color: #000000;\r\n");
      out.write("    background-color: #ffffff;\r\n");
      out.write("    border: 3px solid #da5767;\r\n");
      out.write("    outline: 0;\r\n");
      out.write("    box-shadow: none;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn{\r\n");
      out.write("  padding: 0.6rem 1.2rem;\r\n");
      out.write("  background: #da5767;\r\n");
      out.write("  border: 2px solid #da5767;\r\n");
      out.write("}\r\n");
      out.write(".btn-primary:hover {    \r\n");
      out.write("    background-color: #df8c96;\r\n");
      out.write("    border-color: #df8c96;\r\n");
      out.write("  transition: .3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <div class=\"row justify-content-center\">\r\n");
      out.write("  <div class=\"col-md-5\">\r\n");
      out.write("   <div class=\"card\">\r\n");
      out.write("     <h2 class=\"card-title text-center\" style=color:indianred><b>ADD-CONTACT</b></h2>\r\n");
      out.write("      <div class=\"card-body py-md-4\">\r\n");
      out.write("       <form _lpchecked=\"1\" action=\"./ContactServlet\" method=\"post\">\r\n");
      out.write("          <div class=\"form-group\">\r\n");
      out.write("             <input type=\"text\" class=\"form-control\" id=\"name\"  name=\"name\" placeholder=\"Name\" required=\"required\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("             <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"  name=\"email\" required=\"required\">\r\n");
      out.write("                            </div>                                               \r\n");
      out.write("   <div class=\"form-group\">\r\n");
      out.write("     <input type=\"MobileNo\" class=\"form-control\" id=\"MobileNo\" placeholder=\"MobileNo\"   name=\"MobileNo\" required=\"required\">\r\n");
      out.write("   </div>\r\n");
      out.write("   <div class=\"form-group\">\r\n");
      out.write("      <input type=\"Address\" class=\"form-control\" id=\"Address\" placeholder=\"Address\" name=\"Address\" required=\"required\">\r\n");
      out.write("   </div>\r\n");
      out.write("   <div class=\"d-flex flex-row align-items-center justify-content-between\">\r\n");
      out.write("      <a href=\"./dashboard.jsp\"><img alt=\"\" src=\"\">BACK</a>\r\n");
      out.write("      <input type=\"hidden\" name=\"action\" value=\"addContact\" >\r\n");
      out.write("                                <button class=\"btn btn-primary\">ADD</button>\r\n");
      out.write("          </div>\r\n");
      out.write("       </form>\r\n");
      out.write("     </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
